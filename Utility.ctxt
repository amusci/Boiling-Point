#BlueJ class context
comment0.params=string\ source\ i
comment0.target=int\ getvalue(java.lang.String,\ java.lang.String,\ int)
comment0.text=\r\n\ Gets\ a\ value\ from\ a\ string\ in\ format\:\r\n\ string(value1,value2,value3...)\r\n\r\n\ @param\ string\ The\ variable\ name\ (e.g\:\ foo(bar)\ \=\ foo)\r\n\ @param\ source\ The\ string\ (single\ line)\ to\ get\ the\ value\ from\r\n\ @param\ i\ \ \ \ \ \ The\ position\ of\ the\ value\ (starting\ from\ 0)\r\n\ @return\ An\ integer\ containing\ the\ value\r\n
comment1.params=i\ j
comment1.target=int\ xs(int,\ int)
comment1.text=\r\n\ Turns\ a\ 3D\ XY\ coordinate\ into\ a\ 2D\ X\ perspective\ coordinate.\r\n\r\n\ @param\ i\ The\ 3D\ X\ point\r\n\ @param\ j\ The\ 3D\ Y\ point\r\n\ @return\ The\ 2D\ X\ coordinate.\r\n
comment10.params=f\ f1\ f2\ f3\ f4\ f5
comment10.target=int\ rpy(float,\ float,\ float,\ float,\ float,\ float)
comment11.params=i\ j\ k\ l
comment11.target=int\ py(int,\ int,\ int,\ int)
comment12.params=x1\ y1\ x2\ y2
comment12.target=int\ distance(int,\ int,\ int,\ int)
comment12.text=\r\n\ Users\ of\ this\ method\ should\ use\ Eclipse's\ "Refactor\ >\ Inline\ Method"\ feature\ to\ inline\ calls\ to\ it.\r\n\ It's\ a\ very\ simple\ method\ and\ the\ few\ nanoseconds\ spent\ to\ call\ it\ could\ be\ crucial\ especially\ if\ used\r\n\ inside\ of\ a\ large\ loop.\r\n\ \r\n\ The\ usage\ of\ Math.pow\ doesn't\ affect\ performance\ since\ the\ Hotspot\ will\ inline\ (turn\ into\ x\ *\ x)\ calls\ to\ it.\r\n
comment13.params=af\ af1\ i\ j\ k\ l
comment13.target=void\ rot(float[],\ float[],\ int,\ int,\ int,\ int)
comment14.params=ai\ ai1\ i\ j\ k\ l
comment14.target=void\ rot(int[],\ int[],\ int,\ int,\ int,\ int)
comment15.params=poly1\ poly2\ center1\ center2\ angle\ sin_ang\ cos_ang
comment15.target=int[]\ rotSingle(int,\ int,\ int,\ int,\ int,\ float,\ float)
comment16.params=
comment16.target=void\ startTimer()
comment17.params=
comment17.target=void\ stopTimer()
comment2.params=i\ j
comment2.target=int\ cXs(int,\ int)
comment3.params=i\ j\ m
comment3.target=int\ ys(int,\ int,\ int)
comment3.text=\r\n\ Turns\ a\ 3D\ ZY\ coordinate\ into\ a\ 2D\ Y\ perspective\ coordinate.\r\n\r\n\ @param\ i\ The\ 3D\ Z\ point\r\n\ @param\ j\ The\ 3D\ Y\ point\r\n\ @param\ m\ There\ are\ two\ different\ ys()\ methods\ within\ NFM2,\ this\ integer\ is\ used\ to\ unify\ them\ while\ providing\ a\ way\ to\ distinguish\ between\ them.\r\n\ \ \ \ \ \ \ \ \ \ 0\ is\ for\ using\ Medium.cz\ (normal)\r\n\ \ \ \ \ \ \ \ \ \ 1\ is\ for\ using\ 10\ (only\ found\ in\ Medium)\r\n\ @return\ The\ 2D\ Y\ coordinate.\r\n
comment4.params=i\ j
comment4.target=int\ cYs(int,\ int)
comment5.params=string\ source\ i
comment5.target=int\ getint(java.lang.String,\ java.lang.String,\ int)
comment5.text=\r\n\ Gets\ an\ integer\ from\ a\ string\ in\ format\:\r\n\ string(int1,int2,int3...)\r\n\r\n\ @param\ string\ The\ beginning\ of\ the\ string\ (e.g\:\ foo(0,0,1)\ \=\ foo)\r\n\ @param\ source\ The\ string\ (single\ line)\ to\ get\ the\ value\ from\r\n\ @param\ i\ \ \ \ \ \ The\ position\ of\ the\ value\ (starting\ from\ 0)\r\n\ @return\ An\ integer\ containing\ the\ value\r\n
comment6.params=string\ source\ i
comment6.target=java.lang.String\ getstring(java.lang.String,\ java.lang.String,\ int)
comment6.text=\r\n\ Gets\ a\ substring,\ nicely\r\n\r\n\ @param\ string\ The\ beginning\ of\ the\ string\ (e.g\:\ foo(0,0,1)\ \=\ foo)\r\n\ @param\ source\ The\ string\ (single\ line)\ to\ get\ the\ value\ from\r\n\ @param\ i\ \ \ \ \ \ The\ position\ of\ the\ string\ (starting\ from\ 0)\r\n\ @return\ A\ string\r\n
comment7.params=string
comment7.target=java.awt.image.BufferedImage\ webGet(java.lang.String)
comment8.params=i\ j
comment8.target=int\ spy(int,\ int)
comment9.params=i\ j\ k\ l
comment9.target=float\ pys(int,\ int,\ int,\ int)
numComments=18
